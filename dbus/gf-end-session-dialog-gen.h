/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __GF_END_SESSION_DIALOG_GEN_H__
#define __GF_END_SESSION_DIALOG_GEN_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.SessionManager.EndSessionDialog */

#define GF_TYPE_END_SESSION_DIALOG_GEN (gf_end_session_dialog_gen_get_type ())
#define GF_END_SESSION_DIALOG_GEN(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GF_TYPE_END_SESSION_DIALOG_GEN, GfEndSessionDialogGen))
#define GF_IS_END_SESSION_DIALOG_GEN(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GF_TYPE_END_SESSION_DIALOG_GEN))
#define GF_END_SESSION_DIALOG_GEN_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GF_TYPE_END_SESSION_DIALOG_GEN, GfEndSessionDialogGenIface))

struct _GfEndSessionDialogGen;
typedef struct _GfEndSessionDialogGen GfEndSessionDialogGen;
typedef struct _GfEndSessionDialogGenIface GfEndSessionDialogGenIface;

struct _GfEndSessionDialogGenIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_open) (
    GfEndSessionDialogGen *object,
    GDBusMethodInvocation *invocation,
    guint arg_type,
    guint arg_timestamp,
    guint arg_seconds_to_stay_open,
    const gchar *const *arg_inhibitor_object_paths);

  void (*canceled) (
    GfEndSessionDialogGen *object);

  void (*closed) (
    GfEndSessionDialogGen *object);

  void (*confirmed_hibernate) (
    GfEndSessionDialogGen *object);

  void (*confirmed_hybrid_sleep) (
    GfEndSessionDialogGen *object);

  void (*confirmed_logout) (
    GfEndSessionDialogGen *object);

  void (*confirmed_reboot) (
    GfEndSessionDialogGen *object);

  void (*confirmed_shutdown) (
    GfEndSessionDialogGen *object);

  void (*confirmed_suspend) (
    GfEndSessionDialogGen *object);

};

GType gf_end_session_dialog_gen_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *gf_end_session_dialog_gen_interface_info (void);
guint gf_end_session_dialog_gen_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void gf_end_session_dialog_gen_complete_open (
    GfEndSessionDialogGen *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void gf_end_session_dialog_gen_emit_confirmed_logout (
    GfEndSessionDialogGen *object);

void gf_end_session_dialog_gen_emit_confirmed_reboot (
    GfEndSessionDialogGen *object);

void gf_end_session_dialog_gen_emit_confirmed_shutdown (
    GfEndSessionDialogGen *object);

void gf_end_session_dialog_gen_emit_confirmed_hibernate (
    GfEndSessionDialogGen *object);

void gf_end_session_dialog_gen_emit_confirmed_suspend (
    GfEndSessionDialogGen *object);

void gf_end_session_dialog_gen_emit_confirmed_hybrid_sleep (
    GfEndSessionDialogGen *object);

void gf_end_session_dialog_gen_emit_canceled (
    GfEndSessionDialogGen *object);

void gf_end_session_dialog_gen_emit_closed (
    GfEndSessionDialogGen *object);



/* D-Bus method calls: */
void gf_end_session_dialog_gen_call_open (
    GfEndSessionDialogGen *proxy,
    guint arg_type,
    guint arg_timestamp,
    guint arg_seconds_to_stay_open,
    const gchar *const *arg_inhibitor_object_paths,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gf_end_session_dialog_gen_call_open_finish (
    GfEndSessionDialogGen *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gf_end_session_dialog_gen_call_open_sync (
    GfEndSessionDialogGen *proxy,
    guint arg_type,
    guint arg_timestamp,
    guint arg_seconds_to_stay_open,
    const gchar *const *arg_inhibitor_object_paths,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define GF_TYPE_END_SESSION_DIALOG_GEN_PROXY (gf_end_session_dialog_gen_proxy_get_type ())
#define GF_END_SESSION_DIALOG_GEN_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GF_TYPE_END_SESSION_DIALOG_GEN_PROXY, GfEndSessionDialogGenProxy))
#define GF_END_SESSION_DIALOG_GEN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GF_TYPE_END_SESSION_DIALOG_GEN_PROXY, GfEndSessionDialogGenProxyClass))
#define GF_END_SESSION_DIALOG_GEN_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GF_TYPE_END_SESSION_DIALOG_GEN_PROXY, GfEndSessionDialogGenProxyClass))
#define GF_IS_END_SESSION_DIALOG_GEN_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GF_TYPE_END_SESSION_DIALOG_GEN_PROXY))
#define GF_IS_END_SESSION_DIALOG_GEN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GF_TYPE_END_SESSION_DIALOG_GEN_PROXY))

typedef struct _GfEndSessionDialogGenProxy GfEndSessionDialogGenProxy;
typedef struct _GfEndSessionDialogGenProxyClass GfEndSessionDialogGenProxyClass;
typedef struct _GfEndSessionDialogGenProxyPrivate GfEndSessionDialogGenProxyPrivate;

struct _GfEndSessionDialogGenProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  GfEndSessionDialogGenProxyPrivate *priv;
};

struct _GfEndSessionDialogGenProxyClass
{
  GDBusProxyClass parent_class;
};

GType gf_end_session_dialog_gen_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GfEndSessionDialogGenProxy, g_object_unref)
#endif

void gf_end_session_dialog_gen_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GfEndSessionDialogGen *gf_end_session_dialog_gen_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
GfEndSessionDialogGen *gf_end_session_dialog_gen_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void gf_end_session_dialog_gen_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GfEndSessionDialogGen *gf_end_session_dialog_gen_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GfEndSessionDialogGen *gf_end_session_dialog_gen_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GF_TYPE_END_SESSION_DIALOG_GEN_SKELETON (gf_end_session_dialog_gen_skeleton_get_type ())
#define GF_END_SESSION_DIALOG_GEN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GF_TYPE_END_SESSION_DIALOG_GEN_SKELETON, GfEndSessionDialogGenSkeleton))
#define GF_END_SESSION_DIALOG_GEN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GF_TYPE_END_SESSION_DIALOG_GEN_SKELETON, GfEndSessionDialogGenSkeletonClass))
#define GF_END_SESSION_DIALOG_GEN_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GF_TYPE_END_SESSION_DIALOG_GEN_SKELETON, GfEndSessionDialogGenSkeletonClass))
#define GF_IS_END_SESSION_DIALOG_GEN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GF_TYPE_END_SESSION_DIALOG_GEN_SKELETON))
#define GF_IS_END_SESSION_DIALOG_GEN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GF_TYPE_END_SESSION_DIALOG_GEN_SKELETON))

typedef struct _GfEndSessionDialogGenSkeleton GfEndSessionDialogGenSkeleton;
typedef struct _GfEndSessionDialogGenSkeletonClass GfEndSessionDialogGenSkeletonClass;
typedef struct _GfEndSessionDialogGenSkeletonPrivate GfEndSessionDialogGenSkeletonPrivate;

struct _GfEndSessionDialogGenSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  GfEndSessionDialogGenSkeletonPrivate *priv;
};

struct _GfEndSessionDialogGenSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType gf_end_session_dialog_gen_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GfEndSessionDialogGenSkeleton, g_object_unref)
#endif

GfEndSessionDialogGen *gf_end_session_dialog_gen_skeleton_new (void);


G_END_DECLS

#endif /* __GF_END_SESSION_DIALOG_GEN_H__ */

/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __GF_SM_CLIENT_PRIVATE_GEN_H__
#define __GF_SM_CLIENT_PRIVATE_GEN_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.SessionManager.ClientPrivate */

#define GF_TYPE_SM_CLIENT_PRIVATE_GEN (gf_sm_client_private_gen_get_type ())
#define GF_SM_CLIENT_PRIVATE_GEN(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GF_TYPE_SM_CLIENT_PRIVATE_GEN, GfSmClientPrivateGen))
#define GF_IS_SM_CLIENT_PRIVATE_GEN(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GF_TYPE_SM_CLIENT_PRIVATE_GEN))
#define GF_SM_CLIENT_PRIVATE_GEN_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GF_TYPE_SM_CLIENT_PRIVATE_GEN, GfSmClientPrivateGenIface))

struct _GfSmClientPrivateGen;
typedef struct _GfSmClientPrivateGen GfSmClientPrivateGen;
typedef struct _GfSmClientPrivateGenIface GfSmClientPrivateGenIface;

struct _GfSmClientPrivateGenIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_end_session_response) (
    GfSmClientPrivateGen *object,
    GDBusMethodInvocation *invocation,
    gboolean arg_is_ok,
    const gchar *arg_reason);

  void (*end_session) (
    GfSmClientPrivateGen *object,
    guint arg_flags);

  void (*query_end_session) (
    GfSmClientPrivateGen *object,
    guint arg_flags);

  void (*stop) (
    GfSmClientPrivateGen *object);

};

GType gf_sm_client_private_gen_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *gf_sm_client_private_gen_interface_info (void);
guint gf_sm_client_private_gen_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void gf_sm_client_private_gen_complete_end_session_response (
    GfSmClientPrivateGen *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void gf_sm_client_private_gen_emit_query_end_session (
    GfSmClientPrivateGen *object,
    guint arg_flags);

void gf_sm_client_private_gen_emit_end_session (
    GfSmClientPrivateGen *object,
    guint arg_flags);

void gf_sm_client_private_gen_emit_stop (
    GfSmClientPrivateGen *object);



/* D-Bus method calls: */
void gf_sm_client_private_gen_call_end_session_response (
    GfSmClientPrivateGen *proxy,
    gboolean arg_is_ok,
    const gchar *arg_reason,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gf_sm_client_private_gen_call_end_session_response_finish (
    GfSmClientPrivateGen *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gf_sm_client_private_gen_call_end_session_response_sync (
    GfSmClientPrivateGen *proxy,
    gboolean arg_is_ok,
    const gchar *arg_reason,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define GF_TYPE_SM_CLIENT_PRIVATE_GEN_PROXY (gf_sm_client_private_gen_proxy_get_type ())
#define GF_SM_CLIENT_PRIVATE_GEN_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GF_TYPE_SM_CLIENT_PRIVATE_GEN_PROXY, GfSmClientPrivateGenProxy))
#define GF_SM_CLIENT_PRIVATE_GEN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GF_TYPE_SM_CLIENT_PRIVATE_GEN_PROXY, GfSmClientPrivateGenProxyClass))
#define GF_SM_CLIENT_PRIVATE_GEN_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GF_TYPE_SM_CLIENT_PRIVATE_GEN_PROXY, GfSmClientPrivateGenProxyClass))
#define GF_IS_SM_CLIENT_PRIVATE_GEN_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GF_TYPE_SM_CLIENT_PRIVATE_GEN_PROXY))
#define GF_IS_SM_CLIENT_PRIVATE_GEN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GF_TYPE_SM_CLIENT_PRIVATE_GEN_PROXY))

typedef struct _GfSmClientPrivateGenProxy GfSmClientPrivateGenProxy;
typedef struct _GfSmClientPrivateGenProxyClass GfSmClientPrivateGenProxyClass;
typedef struct _GfSmClientPrivateGenProxyPrivate GfSmClientPrivateGenProxyPrivate;

struct _GfSmClientPrivateGenProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  GfSmClientPrivateGenProxyPrivate *priv;
};

struct _GfSmClientPrivateGenProxyClass
{
  GDBusProxyClass parent_class;
};

GType gf_sm_client_private_gen_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GfSmClientPrivateGenProxy, g_object_unref)
#endif

void gf_sm_client_private_gen_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GfSmClientPrivateGen *gf_sm_client_private_gen_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
GfSmClientPrivateGen *gf_sm_client_private_gen_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void gf_sm_client_private_gen_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GfSmClientPrivateGen *gf_sm_client_private_gen_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GfSmClientPrivateGen *gf_sm_client_private_gen_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GF_TYPE_SM_CLIENT_PRIVATE_GEN_SKELETON (gf_sm_client_private_gen_skeleton_get_type ())
#define GF_SM_CLIENT_PRIVATE_GEN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GF_TYPE_SM_CLIENT_PRIVATE_GEN_SKELETON, GfSmClientPrivateGenSkeleton))
#define GF_SM_CLIENT_PRIVATE_GEN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GF_TYPE_SM_CLIENT_PRIVATE_GEN_SKELETON, GfSmClientPrivateGenSkeletonClass))
#define GF_SM_CLIENT_PRIVATE_GEN_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GF_TYPE_SM_CLIENT_PRIVATE_GEN_SKELETON, GfSmClientPrivateGenSkeletonClass))
#define GF_IS_SM_CLIENT_PRIVATE_GEN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GF_TYPE_SM_CLIENT_PRIVATE_GEN_SKELETON))
#define GF_IS_SM_CLIENT_PRIVATE_GEN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GF_TYPE_SM_CLIENT_PRIVATE_GEN_SKELETON))

typedef struct _GfSmClientPrivateGenSkeleton GfSmClientPrivateGenSkeleton;
typedef struct _GfSmClientPrivateGenSkeletonClass GfSmClientPrivateGenSkeletonClass;
typedef struct _GfSmClientPrivateGenSkeletonPrivate GfSmClientPrivateGenSkeletonPrivate;

struct _GfSmClientPrivateGenSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  GfSmClientPrivateGenSkeletonPrivate *priv;
};

struct _GfSmClientPrivateGenSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType gf_sm_client_private_gen_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GfSmClientPrivateGenSkeleton, g_object_unref)
#endif

GfSmClientPrivateGen *gf_sm_client_private_gen_skeleton_new (void);


G_END_DECLS

#endif /* __GF_SM_CLIENT_PRIVATE_GEN_H__ */
